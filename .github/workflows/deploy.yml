name: Tiktok API Deploy

on:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout new source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Cache register
        uses: actions/cache@v3
        with:
          path: |
            /tmp/.buildx-cache
            /tmp/.buildx-cache-builder
            /usr/local/bin/kubectl
            /usr/local/bin/kustomize
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build builder
        uses: docker/build-push-action@v3
        with:
          context: ./
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile.prod
          target: builder
          push: false
          cache-from: |
            type=local,src=/tmp/.buildx-cache-builder
          cache-to: type=local,dest=/tmp/.buildx-cache-builder-new

      - name: Build production
        uses: docker/build-push-action@v3
        with:
          context: ./
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile.prod
          target: production
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/pav-api:${{ github.ref_name }}-${{ github.run_number }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache-builder-new
            type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Deploy to eks cluster
        env:
          IMAGE_TO_DEPLOY: ${{ steps.login-ecr.outputs.registry }}/pav-api:${{ github.ref_name }}-${{ github.run_number }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          # FIXME: add expiration for kubeconfig file
          aws eks update-kubeconfig --region ap-southeast-1 --name pav
          
          if [ ! -f "/usr/local/bin/kubectl" ]; then
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.25.0/bin/linux/amd64/kubectl 
            chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/kubectl
          fi
          
          if [ ! -f "/usr/local/bin/kustomize" ]; then
            curl -s https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh  | bash
            sudo mv ./kustomize /usr/local/bin/kustomize
          fi
          
          # FIXME: also support deploy to production environment
          if [ "develop" == "$BRANCH_NAME" ]; then
            cd ./ci/overlays/development && \
              kustomize edit set image pav-api=${IMAGE_TO_DEPLOY} && \
              kustomize build | kubectl apply -f -
          fi
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          rm -rf /tmp/.buildx-cache-builder
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          mv /tmp/.buildx-cache-builder-new /tmp/.buildx-cache-builder